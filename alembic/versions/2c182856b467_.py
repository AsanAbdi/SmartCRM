"""empty message

Revision ID: 2c182856b467
Revises: f5dfc434dad8
Create Date: 2025-05-15 14:29:36.012880

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2c182856b467'
down_revision: Union[str, None] = 'f5dfc434dad8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('client',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('source', sa.Enum('website', 'instagram', 'whatsapp', 'telegram', 'facebook', 'referral', 'offline', 'other', name='clientsource'), nullable=False),
    sa.Column('segment', sa.Enum('retail', 'wholesale', 'vip', 'lead', 'prospect', 'churned', 'partner', 'test', name='clientsegment'), nullable=False),
    sa.Column('lifetime_value', sa.Float(), nullable=True),
    sa.Column('last_activity_at', sa.Date(), nullable=True),
    sa.Column('activity_count', sa.Integer(), nullable=True),
    sa.Column('prediction_score', sa.Float(), nullable=True),
    sa.Column('assigned_to', sa.Uuid(), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(length=10000), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_email'), 'client', ['email'], unique=True)
    op.create_index(op.f('ix_client_full_name'), 'client', ['full_name'], unique=False)
    op.create_index(op.f('ix_client_id'), 'client', ['id'], unique=True)
    op.create_index(op.f('ix_client_phone_number'), 'client', ['phone_number'], unique=True)
    op.create_index(op.f('ix_client_segment'), 'client', ['segment'], unique=False)
    op.create_index(op.f('ix_client_source'), 'client', ['source'], unique=False)
    op.create_table('interaction',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('client_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('interaction_type', sa.Enum('call', 'meeting', 'email', 'chat', 'service', 'subscription', name='interactiontype'), nullable=False),
    sa.Column('interaction_datetime', sa.DateTime(), nullable=False),
    sa.Column('channel', sa.Enum('phone', 'telegram', 'whatsapp', 'instagram', name='channeltype'), nullable=False),
    sa.Column('interaction_status', sa.Enum('pending', 'completed', 'failed', 'cancelled', name='interactionstatus'), nullable=False),
    sa.Column('revenue', sa.Float(), nullable=True),
    sa.Column('cost_center', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(length=10000), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('engagement_score', sa.Float(), nullable=True),
    sa.Column('churn_probability', sa.Float(), nullable=True),
    sa.Column('predicted_ltv', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interaction_client_id'), 'interaction', ['client_id'], unique=False)
    op.create_index(op.f('ix_interaction_id'), 'interaction', ['id'], unique=True)
    op.create_index(op.f('ix_interaction_interaction_datetime'), 'interaction', ['interaction_datetime'], unique=False)
    op.create_index(op.f('ix_interaction_interaction_status'), 'interaction', ['interaction_status'], unique=False)
    op.create_index(op.f('ix_interaction_user_id'), 'interaction', ['user_id'], unique=False)
    op.drop_index('ix_clients_email', table_name='clients')
    op.drop_index('ix_clients_full_name', table_name='clients')
    op.drop_index('ix_clients_id', table_name='clients')
    op.drop_index('ix_clients_phone_number', table_name='clients')
    op.drop_index('ix_clients_segment', table_name='clients')
    op.drop_index('ix_clients_source', table_name='clients')
    op.drop_table('clients')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('source', postgresql.ENUM('website', 'instagram', 'whatsapp', 'telegram', 'facebook', 'referral', 'offline', 'other', name='clientsource'), autoincrement=False, nullable=False),
    sa.Column('segment', postgresql.ENUM('retail', 'wholesale', 'vip', 'lead', 'prospect', 'churned', 'partner', 'test', name='clientsegment'), autoincrement=False, nullable=False),
    sa.Column('lifetime_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('last_activity_at', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('activity_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('prediction_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('assigned_to', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('birth_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['user.id'], name='clients_assigned_to_fkey'),
    sa.PrimaryKeyConstraint('id', name='clients_pkey')
    )
    op.create_index('ix_clients_source', 'clients', ['source'], unique=False)
    op.create_index('ix_clients_segment', 'clients', ['segment'], unique=False)
    op.create_index('ix_clients_phone_number', 'clients', ['phone_number'], unique=True)
    op.create_index('ix_clients_id', 'clients', ['id'], unique=True)
    op.create_index('ix_clients_full_name', 'clients', ['full_name'], unique=False)
    op.create_index('ix_clients_email', 'clients', ['email'], unique=True)
    op.drop_index(op.f('ix_interaction_user_id'), table_name='interaction')
    op.drop_index(op.f('ix_interaction_interaction_status'), table_name='interaction')
    op.drop_index(op.f('ix_interaction_interaction_datetime'), table_name='interaction')
    op.drop_index(op.f('ix_interaction_id'), table_name='interaction')
    op.drop_index(op.f('ix_interaction_client_id'), table_name='interaction')
    op.drop_table('interaction')
    op.drop_index(op.f('ix_client_source'), table_name='client')
    op.drop_index(op.f('ix_client_segment'), table_name='client')
    op.drop_index(op.f('ix_client_phone_number'), table_name='client')
    op.drop_index(op.f('ix_client_id'), table_name='client')
    op.drop_index(op.f('ix_client_full_name'), table_name='client')
    op.drop_index(op.f('ix_client_email'), table_name='client')
    op.drop_table('client')
    # ### end Alembic commands ###
