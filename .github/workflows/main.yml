name: CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  docker-compose-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Create .env
      run: |
        echo "POSTGRES_USER=postgres"      > .env
        echo "POSTGRES_PASSWORD=postgres" >> .env
        echo "POSTGRES_DB=smartCrmDb"      >> .env
        echo "POSTGRES_SERVER=db"          >> .env
        echo "POSTGRES_PORT=5432"          >> .env
        echo "DEBUG=True"                  >> .env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}"            >> .env
        echo "MAX_LIMIT=200"               >> .env
        echo "ACCESS_TOKEN_EXPIRE_MINUTES=120" >> .env
        echo "SUPERUSER_USERNAME=${{ secrets.SUPERUSER_USERNAME }}" >> .env
        echo "SUPERUSER_PASSWORD=${{ secrets.SUPERUSER_PASSWORD }}" >> .env
        echo "SUPERUSER_EMAIL=${{ secrets.SUPERUSER_EMAIL }}"       >> .env
        echo "SUPERUSER_ROLE=${{ secrets.SUPERUSER_ROLE }}"         >> .env
        echo "NORMAL_USER_USERNAME=${{ secrets.NORMAL_USER_USERNAME }}" >> .env

    - name: Start services with Docker Compose
      run: |
        docker compose up -d --build db web

    - name: Run migrations & tests inside web container
      run: |
        docker compose exec web bash -lc "\
          until pg_isready -h db -U postgres; do sleep 1; done && \
          alembic upgrade head && \
          pytest \
        "

    - name: Tear down
      if: always()
      run: docker compose down
