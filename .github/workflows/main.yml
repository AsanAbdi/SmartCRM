name: CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  docker-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Create .env
      run: |
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" > .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "POSTGRES_SERVER=db" >> .env
        echo "POSTGRES_PORT=5432" >> .env
        echo "DEBUG=${{ secrets.DEBUG }}" >> .env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
        echo "MAX_LIMIT=${{ secrets.MAX_LIMIT }}" >> .env
        echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> .env
        echo "SUPERUSER_USERNAME=${{ secrets.SUPERUSER_USERNAME }}" >> .env
        echo "SUPERUSER_PASSWORD=${{ secrets.SUPERUSER_PASSWORD }}" >> .env
        echo "SUPERUSER_EMAIL=${{ secrets.SUPERUSER_EMAIL }}" >> .env
        echo "SUPERUSER_ROLE=${{ secrets.SUPERUSER_ROLE }}" >> .env
        echo "NORMAL_USER_USERNAME=${{ secrets.NORMAL_USER_USERNAME }}" >> .env

    - name: Build Docker image
      run: docker build -t app:ci .

    - name: Run container with env and PYTHONPATH
      run: |
        docker run -d \
          --name app_ci \
          --env-file .env \
          -e PYTHONPATH=.:/app \
          app:ci

    - name: Apply migrations inside container
      run: docker exec app_ci bash -lc "alembic upgrade head"

    - name: Run tests inside container
      run: docker exec app_ci bash -lc "pytest"

    - name: Teardown
      if: always()
      run: |
        docker stop app_ci
        docker rm app_ci
